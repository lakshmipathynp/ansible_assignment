---
- name: Deploy and run Flask application
  hosts: localhost
  become: yes
  vars:
    pkg:
      - "python3"
      - "python3.10-venv"
      - "python3-pip"
    pkg1:
      - "gunicorn"
      - "flask"
    venv_path: /opt/deployment/venv

  tasks:
    - name: Ensure python3 installed on Debian
      apt:
        name: "{{ pkg }}"
        state: present
        update_cache: yes
      when: ansible_os_family == 'Debian'

    - name: Create directories in opt path for deployment
      file:
        path: "{{ item }}"
        state: directory
        recurse: yes
        mode: 0755
      loop:
        - /opt/example
        - /opt/example/instance
        - /opt/deployment

    - name: Copy wheelfile,config.py and example.service files to target hosts
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        remote_src: yes
      loop:
        - src: Example-1.1.1-py3-none-any.whl
          dest: /opt/example/Example-1.1.1-py3-none-any.whl
        - src: config.py
          dest: /opt/example/instance/
        - src: run.sh
          dest: /usr/local/bin/run.sh
        - src: example.service
          dest: /etc/systemd/system/example.service

    - name: Create virtual environment
      command: python3 -m venv "{{ venv_path }}"
      args:
        creates: "{{ venv_path }}/bin/activate"

    - name: Install Gunicorn and flask in virtual environment
      pip:
       name: "{{ pkg1 }}"
       state: present
       executable: "/usr/bin/pip"

    - name: Install wheel file using
      command: pip install Example-1.1.1-py3-none-any.whl
      register: wheel_output
    - debug:
        msg: "{{ wheel_output }}"

    - name: Set up environment variables for Flask application
      lineinfile:
        path: /etc/environment
        line: "{{ item }}"
        create: yes
      with_items:
        - DB_PATH=postgresql://example_user:myVerySecretDatabasePassword@localhost:5432/example_db
        - SECRET_KEY=AVerySafeExampleKey123!
        - INSTANCE_PATH=/opt/example/instance
        - ADMIN_GROUPS=Read-only
    
    - name: Reload systemd to pick up new service named myapp.service
      systemd:
        daemon_reload: yes

    - name: Start and enable Flask service
      systemd:
        name: myapp
        state: started
        enabled: yes