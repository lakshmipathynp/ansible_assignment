---
- name: Deploy and run Flask application
  hosts: "{{ reqhosts }}"
  become: yes
  vars:
    pkg:
      - "python3"
      - "python3-pip"
      - "python3-venv"
    version_check:
      - "pip3 --version"
      - "python3 --version"
    venv_path: /opt/deployment/example 
 
  tasks:
    - name: Ensure Python and pip are installed on Debian
      apt:
        name: "{{ pkg }}"
        state: present
        update_cache: yes
      when: ansible_os_family == 'Debian'

    - name: Check pip version and python3 version
      shell: "{{ item }}"
      register: version_debian_output
      with_items: "{{ version_check }}"
    - debug:
        msg: "{{ item.stdout_lines }}"
      with_items: "{{ version_debian_output.results }}"

    - name: Create directories in opt path for deployment
      file: 
        path: "{{ item }}"
        state: directory
        recurse: yes
        mode: 0755
      loop:
        - /opt/example
        - /opt/example/instance
        - /opt/deployment 
                  
    - name: Copy wheelfile,config.py and example.service files to target hosts
      copy: 
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        remote_src: yes
      loop: 
        - src: Example-1.1.1-py3-none-any.whl
          dest: /opt/example/Example-1.1.1-py3-none-any.whl
        - src: config.py
          dest: /opt/example/instance/
        - src: run.sh
          dest: /usr/local/bin/run.sh
        - src: example.service
          dest: /etc/systemd/system/example.service

  #  - name: Install Flask application from wheel file on target hosts
  #    pip: 
  #     name: /opt/example/Example-1.1.1-py3-none-any.whl

  #  - name: Install virtual env
  #    pip: 
  #     name: virtualenv
  #     state: present
  #     executable: pip3

    - name: Create virtual environment
      command: python3 -m venv {{ venv_path }}
      args: 
        creates: "{{ venv_path }}"

    - name: Install Gunicorn in virtual environment
      pip: 
       name: gunicorn
       state: present
       executable: "{{ venv_path }}/bin/pip"  
             
    - name: Reload Systemd service
      systemd:
        daemon_reload: yes

    - name: Start and enable example.service
      systemd:
        name: example
        state: started
        enabled: yes
